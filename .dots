#!/usr/bin/env bash

function runDots() {

        # Let's add some fancy colors to the terminal output
        # *********************************
        bold_green="\e[1m\e[32m"
        bold_magenta="\e[1m\e[35m"
        normal="\e[0m"


    # Ask for the administrator password upfront
#    sudo -v

    # Keep-alive: update existing `sudo` time stamp until the script has finished
#    while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

    # Run sections based on command line arguments
    for ARG in "$@"
    do

        # Run the bootstrap.sh Script
        # *********************************
        if [ $ARG == "bootstrap" ] || [ $ARG == "all" ]; then
            echo ""
            echo "#====================================================================================#"
            echo "# STEP 01: DOWNLOADING FILES..                                                       #"
            echo "# Syncing the setup repo to your local machine.                                      #"
            echo "#====================================================================================#"
            echo -e "${normal}"
#            cd ~ && curl -#L https://github.com/bwangila/macos-dev-setup/tarball/master | tar -xzv --strip-components 1 --exclude={README.md,LICENSE}
        fi

        # Run the osxprep.sh Script
        # *********************************
        if [ $ARG == "osxprep" ] || [ $ARG == "all" ]; then
            echo -e "${bold_magenta}"
            echo "#====================================================================================#"
            echo "# STEP 02: PREPARING OSX..                                                           #"
            echo "# Updating OSX and installing Xcode command line tools                               #"
            echo "#====================================================================================#"
            echo -e "${normal}"
            ./osxprep.sh
        fi

        # Run the brew.sh Script
        # *********************************
        if [ $ARG == "brew" ] || [ $ARG == "all" ]; then
            echo -e "${bold_magenta}"
            echo "#====================================================================================#"
            echo "# STEP 03: HOMEBREW & MAC APPS..                                                     #"
            echo "#                                                                                    #"
            echo "# Installing Homebrew along with some common formulae and apps.                      #"
            echo "# Grab a cup of coffee, this might take a while..                                    #"
            echo "#====================================================================================#"
            echo -e "${normal}"
            ./brew.sh
        fi

        # Run the osx.sh Script
        # *********************************
        if [ $ARG == "osx" ] || [ $ARG == "all" ]; then
            # I strongly suggest you read through the commented osx.sh
            # source file and tweak any settings based on your personal
            # preferences. The script defaults are intended for you to
            # customize. For example, if you are not running an SSD you
            # might want to change some of the settings listed in the
            # SSD section.
            echo -e "${bold_magenta}"
            echo "#====================================================================================#"
            echo "# Setting sensible OSX defaults.                                                     #"
            echo "#====================================================================================#"
            echo -e "${normal}"
            ./osx.sh
        fi
        # if [ $ARG == "pydata" ] || [ $ARG == "all" ]; then
        #     # Run the pydata.sh Script
        #     echo "------------------------------"
        #     echo "Setting up Python data development environment."
        #     echo "------------------------------"
        #     echo ""
        #     ./pydata.sh
        # fi
        # if [ $ARG == "aws" ] || [ $ARG == "all" ]; then
        #     # Run the aws.sh Script
        #     echo "------------------------------"
        #     echo "Setting up AWS development environment."
        #     echo "------------------------------"
        #     echo ""
        #     ./aws.sh
        # fi
        if [ $ARG == "datastores" ] || [ $ARG == "all" ]; then
            # Run the datastores.sh Script
            echo -e "${bold_magenta}"
            echo "#====================================================================================#"
            echo "# Setting up data stores.                                                            #"
            echo "#====================================================================================#"
            echo -e "${normal}"
            ./datastores.sh
        fi
        if [ $ARG == "web" ] || [ $ARG == "all" ]; then
            # Run the web.sh Script
            echo -e "${bold_magenta}"
            echo "#====================================================================================#"
            echo "# Setting up JavaScript web development environment.                                 #"
            echo "#====================================================================================#"
            echo -e "${normal}"
            ./web.sh
        fi
        if [ $ARG == "android" ] || [ $ARG == "all" ]; then
            # Run the android.sh Script
            echo -e "${bold_magenta}"
            echo "#====================================================================================#"
            echo "# Setting up Android development environment.                                        #"
            echo "#====================================================================================#"
            echo -e "${normal}"
            ./android.sh
        fi
    done

    echo -e "${bold_magenta}"
    echo "#====================================================================================#"
    echo "# SETUP COMPLETE                                                                     #"
    echo "# Please restart your computer to ensure all updates take effect.                    #"
    echo "#====================================================================================#"
    echo -e "${normal}"
}

# Confirm overwriting existing files
# *********************************
tput setaf 1 #set text color to red
  echo ""
  read -p "This script may overwrite existing files in your home directory. Are you sure? (y/n) " -n 1;
  echo ""
tput sgr0 # reset all text properties
if [[ $REPLY =~ ^[Yy]$ ]]; then
    runDots $@
fi;

unset runDots;
